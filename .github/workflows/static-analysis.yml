name: Static Analysis

on:
  push:
    paths:
      - '**.php'
      - 'phpstan.neon.dist'

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: true
      matrix:
        php: [ 8.1, 8.2 ]

    name: PHP ${{ matrix.php }}
    env:
      extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
      key: php_${{ matrix.php }}_analysis_cache_v1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup cache environment
        id: ext_cache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v3
        with:
          path: ${{ steps.ext_cache.outputs.dir }}
          key: ${{ steps.ext_cache.outputs.key }}
          restore-keys: ${{ steps.ext_cache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ env.key }}-${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ env.key }}-${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Execute Analyze
        run: ./vendor/bin/phpstan analyze -c ./phpstan.neon.dist -n -v --no-progress --no-ansi
